name: CI

on:
  push:
    branches:
    - 'main'
    - 'develop'
    - 'feature/**'
  pull_request:
    branches:
    - 'main'
    - 'develop'

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    services:
      # Google Pub/Sub emulator for integration testing
      pubsub:
        image: gcr.io/google.com/cloudsdktool/google-cloud-cli:emulators
        ports:
          - 8085:8085
        options: >-
          --health-cmd "curl --fail http://localhost:8085 || exit 1"
          --health-interval 5s
          --health-timeout 10s
          --health-retries 3
        command: >
          gcloud beta emulators pubsub start --project=test-project --host-port=0.0.0.0:8085
      

    env:
      # Internal Env Vars for sending Pub/Sub requests to the emulator
      PUBSUB_EMULATOR_HOST: localhost:8085
      GOOGLE_CLOUD_PROJECT: test-project

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Go Mod Tidy
        run: go mod tidy

      - name: Install Linter
        run: make lint-install

      - name: Makefile CI
        run: make ci

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.out
          flags: unittests
          name: codecov-coverage
          fail_ci_if_error: true

      - name: Upload Coverage as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.out

      - name: Deploy Coverage HTML to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: .
          publish_branch: gh-pages
          allow_empty_commit: false